name: cocogitto (and release)

on: [push]

jobs:
  cog_check_job:
    runs-on: ubuntu-latest
    name: check commits with cocogitto
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Conventional commits compliance check
        uses: oknozor/cocogitto-action@v3
        with:
          check-latest-tag-only: true
          git-user: 'yoctoyotta1024'
          git-user-email: 'yoctoyotta1024@yahoo.com'

  test_cleopy_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3

      - name: build and test cleopy
        run: |
          uv build
          uv run pytest tests/

      # Check that basic features work and we didn't miss to include crucial files
      - name: pytests (wheel)
        run: uv run --isolated --no-project -p 3.13 --with dist/*.whl tests/test_publish.py

      - name: pytests (source distribution)
        run: uv run --isolated --no-project -p 3.13 --with dist/*.tar.gz tests/test_publish.py

  release:
    needs: ["cog_check_job", "test_cleopy_build"]
    # Only release new version when merging into `origin/main`.`
    if: "github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository_owner == 'yoctoyotta1024'"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    name: Perform semantic versioning release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: semver release with cocogitto
        uses: oknozor/cocogitto-action@v3
        id: release
        with:
          release: true
          check-latest-tag-only: true
          git-user: 'yoctoyotta1024'
          git-user-email: 'yoctoyotta1024@yahoo.com'

      - name: Print and update hard-coded version for release
        run: |
          echo "current CLEO version: ${{ steps.release.outputs.version }}"
          export version=$(echo "${{ steps.release.outputs.version }}" | sed 's/^v//')
          export version_date=$(date)
          sed -i "s/^version: .*/version: ${version}/" CITATION.cff
          sed -i "s/^date-released: .*/date-released: ${version_date}/" CITATION.cff

      - name: Generate Changelog
        run: cog changelog --at ${{ steps.release.outputs.version }} -t remote > GITHUB_CHANGELOG.md

      - name: Upload github release
        uses: softprops/action-gh-release@v2
        with:
          body_path: GITHUB_CHANGELOG.md
          tag_name: ${{ steps.release.outputs.version }}
          files: |
            CITATION.cff
